name: ENV Variables

on: push
env: 
  WF_ENV: ${{ secrets.WF_ENV }}
  REPO_ENV: ${{ secrets.REPO_ENV }}

jobs:
  create-issue:
    runs-on: ubuntu-latest 
    permissions:
      issues: write 
    steps:
      - name: Push a random file 
        run: |
          pwd
          ls -a
          git init
          git remote add origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "my-bot@bot.com"
          git config --global user.name "my-bot"
          git fetch
          git checkout master
          git branch --set-upstream-to=origin/master
          git pull
          ls -a
          echo $RANDOM >> random.txt
          ls -a
          git add -A
          git commit -m"Random file"
          git push
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
  log-env:
    runs-on: ubuntu-latest
    environment: TEST 
    env:
      JOB_ENV: Available only to all steps in log-env job
      STAGE_SPECIFIC: ${{ secrets.STAGE_SPECIFIC }}
    steps:
      - name: Log ENV Variables
        env:
          STEP_ENV: Available to only this step in TEST
        run: |
          echo "REPO_ENV: ${REPO_ENV}"
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
          echo "STAGE_SPECIFIC: ${STAGE_SPECIFIC}"
      - name: Log with python
        run: |
          import os   
          num = int(os.environ['STAGE_SPECIFIC'])
          doubled = num * 2
          print('next up, the doubled ENV VAR')
          print(doubled)
        shell: python     

  log-env-build:
    runs-on: ubuntu-latest
    environment: BUILD 
    env:
      JOB_ENV: Available only to all steps in log-env job
      STAGE_SPECIFIC: ${{ secrets.STAGE_SPECIFIC }}
    steps:
      - name: Log ENV Variables
        env:
          STEP_ENV: Available to only this step in BUILD
        run: |
          echo "REPO_ENV: ${REPO_ENV}"
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
          echo "STAGE_SPECIFIC: ${STAGE_SPECIFIC}"
      - name: Log with python
        run: |
          import os   
          num = int(os.environ['STAGE_SPECIFIC'])
          doubled = num * 2
          print('next up, the doubled ENV VAR')
          print(doubled)
        shell: python  
     

          
  
